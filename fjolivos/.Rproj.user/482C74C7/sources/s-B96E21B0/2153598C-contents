# use diagonal reference models to explore effects of educational mobility
# on music/visual arts consumption.

library(gnm)

# data come from ~/papers/omnivores/origin/modelling/prepdata.log
# weighted data

#F: Three latent class. If we sum up all the numbers, we get the sample size of the paper
#W: 9 are equivalent to combinations of fedu and edu

Icount <- c(634.29101, 806.348556,  73.041772,
             1561.767,    5822.86,   1394.612,
            440.89603,   2811.265,  2405.9197)
                                              
Pcount <- c(718.40805,  420.05141,  18.419721,
             1345.599,   2073.653,   236.6863,         
            320.23049,  790.28341,  288.66857)
                                              
Ocount <- c(712.69052,  213.15953,  6.2454997,
             1034.041,  805.16215,  62.328148,         
            193.05009,  255.51044,  55.812952)

#F: Number of rows in the cross-tab (9) 
n <- length(Icount)

# edu: 1=degree, 2=intermediate (fur.edu/a/olevels), 3=other/none
# paredu: 1=degree, 2=intermediate (post sch/school), 3=none 
edu <- rep(1:3,3)

#F: Defined as factor variable
fedu <- factor(edu)

paredu <- rep(1:3, rep(3,3))

#F: Defined as factor variable
fparedu <- factor(paredu)

# define upward and downward educational mobility

#F: 1 if expression is true, and 0 if expression is false
upmob   <- ifelse(edu < paredu, 1, 0)
downmob <- ifelse(edu > paredu, 1, 0)

# DRM for 3 x 3 educ tables
## 1. Multinomial Dref model (fitted via Poisson trick)

#F: vector three columns of latent class

lev <- c("I", "P", "O")


counts <- data.frame(cat = factor(rep(lev, each = n), levels = lev),
                     count = c(Icount, Pcount, Ocount),
                     cell = factor(1:n),
                     fparedu = fparedu,
                     fedu = fedu,
                     upmob = upmob,
                     downmob = downmob)

counts
counts$count

m1 <- gnm(count ~ Dref(cat:fparedu, cat:fedu,
                       delta = ~ -1 + cat),
          eliminate = cell,
          constrain = c("(delta1)|(catI)|(I:)"),
          family = poisson,
          data = counts)
summary(m1)
DrefWeights(m1)

# get main effects of education with degree as reference cat
getContrasts(m1, ref="first")
getContrasts(m1, ref="first")

# same model but with P are base, to get O v P contrast
altm1 <- gnm(count ~ Dref(cat:fparedu, cat:fedu,
                          delta = ~ -1 + cat),
             eliminate = cell,
             constrain = c("(delta1)|(catP)|(P:)"),
             family = poisson,
             data = counts)
summary(altm1)
DrefWeights(altm1)

# test for w^v==1
m2 <- gnm(count ~ cat:fparedu,
          eliminate = cell,
          constrain = c("(catI)|(I:)"),
          family = poisson,
          data = counts)
summary(m2)

#am2 <- gnm(count ~ cat:fparedu,
#          eliminate = cell,
#          constrain = c("(delta1)|(catI)|(I:)"),
#          family = poisson,
#          data = counts)
#summary(am2)

# only destination effect, w^V==0
altm2 <- gnm(count ~ cat:fedu,
             eliminate = cell,
             constrain = c("(catI)|(I:)"),
             family = poisson,
             data = counts)
summary(altm2)

# Test for mobility effects

m3 <- gnm(count ~ Dref(cat:fparedu, cat:fedu,
                       delta = ~ -1 + cat + cat:upmob),
          eliminate = cell,
          constrain = c("(delta1)|(catI)|(I:)"),
#         ofInterest = "(catP)|(P:)|(catO)|(O:)",
          family = poisson,
          data = counts)
summary(m3)
DrefWeights(m3)

#altm3 <- gnm(count ~ Dref(cat:fparedu, cat:fedu,
#                          delta = ~ -1 + cat + cat:upmob),
#             eliminate = cell,
#             constrain = c("(delta1)|(catP)|(P:)"),
#             family = poisson,
#             data = counts)
#summary(altm3)
#DrefWeights(altm3)

# goodness of fit statistics for m1, m2 and m1 compared to m2
cbind(m1$deviance, m1$df, 1-pchisq(m1$deviance, m1$df))
cbind(m2$deviance, m2$df, 1-pchisq(m2$deviance, m2$df))
cbind(m3$deviance, m3$df, 1-pchisq(m3$deviance, m3$df))
cbind(m2$deviance-m1$deviance,
      m2$df-m1$df,
      1-pchisq(m2$deviance-m1$deviance, m2$df-m1$df))

cbind(m1$deviance-m3$deviance,
      m1$df-m3$df,
      1-pchisq(m1$deviance-m3$deviance, m1$df-m3$df))

# fitted value for m1 
fvm1 <- cbind(paredu, edu, fitted(m1))
fvm1

# predicted probability of I, P and O under m1
prIo1d1 <- fvm1[1,3]/(fvm1[1,3]+fvm1[10,3]+fvm1[19,3])
prIo1d2 <- fvm1[2,3]/(fvm1[2,3]+fvm1[11,3]+fvm1[20,3])
prIo1d3 <- fvm1[3,3]/(fvm1[3,3]+fvm1[12,3]+fvm1[21,3])
prIo2d1 <- fvm1[4,3]/(fvm1[4,3]+fvm1[13,3]+fvm1[22,3])
prIo2d2 <- fvm1[5,3]/(fvm1[5,3]+fvm1[14,3]+fvm1[23,3])
prIo2d3 <- fvm1[6,3]/(fvm1[6,3]+fvm1[15,3]+fvm1[24,3])
prIo3d1 <- fvm1[7,3]/(fvm1[7,3]+fvm1[16,3]+fvm1[25,3])
prIo3d2 <- fvm1[8,3]/(fvm1[8,3]+fvm1[17,3]+fvm1[26,3])
prIo3d3 <- fvm1[9,3]/(fvm1[9,3]+fvm1[18,3]+fvm1[27,3])

prPo1d1 <- fvm1[10,3]/(fvm1[1,3]+fvm1[10,3]+fvm1[19,3])
prPo1d2 <- fvm1[11,3]/(fvm1[2,3]+fvm1[11,3]+fvm1[20,3])
prPo1d3 <- fvm1[12,3]/(fvm1[3,3]+fvm1[12,3]+fvm1[21,3])
prPo2d1 <- fvm1[13,3]/(fvm1[4,3]+fvm1[13,3]+fvm1[22,3])
prPo2d2 <- fvm1[14,3]/(fvm1[5,3]+fvm1[14,3]+fvm1[23,3])
prPo2d3 <- fvm1[15,3]/(fvm1[6,3]+fvm1[15,3]+fvm1[24,3])
prPo3d1 <- fvm1[16,3]/(fvm1[7,3]+fvm1[16,3]+fvm1[25,3])
prPo3d2 <- fvm1[17,3]/(fvm1[8,3]+fvm1[17,3]+fvm1[26,3])
prPo3d3 <- fvm1[18,3]/(fvm1[9,3]+fvm1[18,3]+fvm1[27,3])

prOo1d1 <- fvm1[19,3]/(fvm1[1,3]+fvm1[10,3]+fvm1[19,3])
prOo1d2 <- fvm1[20,3]/(fvm1[2,3]+fvm1[11,3]+fvm1[20,3])
prOo1d3 <- fvm1[21,3]/(fvm1[3,3]+fvm1[12,3]+fvm1[21,3])
prOo2d1 <- fvm1[22,3]/(fvm1[4,3]+fvm1[13,3]+fvm1[22,3])
prOo2d2 <- fvm1[23,3]/(fvm1[5,3]+fvm1[14,3]+fvm1[23,3])
prOo2d3 <- fvm1[24,3]/(fvm1[6,3]+fvm1[15,3]+fvm1[24,3])
prOo3d1 <- fvm1[25,3]/(fvm1[7,3]+fvm1[16,3]+fvm1[25,3])
prOo3d2 <- fvm1[26,3]/(fvm1[8,3]+fvm1[17,3]+fvm1[26,3])
prOo3d3 <- fvm1[27,3]/(fvm1[9,3]+fvm1[18,3]+fvm1[27,3])

prI <- c(prIo1d1, prIo1d2, prIo1d3,
         prIo2d1, prIo2d2, prIo2d3,
         prIo3d1, prIo3d2, prIo3d2)

prP <- c(prPo1d1, prPo1d2, prPo1d3,
         prPo2d1, prPo2d2, prPo2d3,
         prPo3d1, prPo3d2, prPo3d2)

prO <- c(prOo1d1, prOo1d2, prOo1d3,
         prOo2d1, prOo2d2, prOo2d3,
         prOo3d1, prOo3d2, prOo3d2)

# draw 3 do histogram showing predicted probabilities of I, P, O

#library(rgl)
#
#histed(1:3, 1:3,  )
#
#persp3d(1:3, 1:3, prO,
#       xlab="parent's edu",
#       ylab="respondent's edu",
#       zlab="probability")
#
#plot3d(1:3, 1:3, prO,
#       xlab="parent's edu",
#       ylab="respondent's edu",
#       zlab="probability",
#       type="h")



#library(plot3D)
#
#prI <- matrix(prI,3,3,byrow=T)
#
#prP <- matrix(prP,3,3,byrow=T)
#
#prO <- matrix(prO,3,3,byrow=T)
#
#grey <- matrix(c("grey50","grey55","grey65",
#                 "grey55","grey60","grey70",
#                 "grey65","grey70","grey80"),3,3,byrow=F)
#
#prI
#prP
#prO

#hist3D(x=3:1, y=3:1,
#       z=prO,
#       col=grey,
#       theta=300,
#       phi=20,
#       space=0.3,
#       xlab="parent's edu",
#       ylab="respondent's educ",
#       zlab="probability",
#       main="Probability of being an Omnivore by parent's and respondent's educ#")
#dev.copy2eps(file="~/papers/omnivores/mobility/draft/prOgrey.eps")
#
#hist3D(x=3:1, y=3:1,
#       z=prO,
##       col=grey,
#       theta=300,
#       phi=20,
#       space=0.3,
#       xlab="parent's edu",
#       ylab="respondent's educ",
#       zlab="probability",
#       main="Probability of being an Omnivore by parent's and respondent's educ#")
#dev.copy2eps(file="~/papers/omnivores/mobility/draft/prO.eps")
#
#hist3D(x=3:1, y=3:1,
#       z=prP,
##       col=grey,
#       theta=30,
#       phi=20,
#       space=0.3,
#       xlab="parent's edu",
#       ylab="respondent's educ",
#       zlab="probability",
#       main="Probability of being a Paucivore by parent's and respondent's educ#")
#dev.copy2eps(file="~/papers/omnivores/mobility/draft/prP.eps")
#
#hist3D(x=3:1, y=3:1,
#       z=prI,
##       col=grey,
#       theta=150,
#       phi=20,
#       space=0.3,
#       xlab="parent's edu",
#       ylab="respondent's educ",
#       zlab="probability",
#       main="Probability of being an Inactive by parent's and respondent's educ#")
#dev.copy2eps(file="~/papers/omnivores/mobility/draft/prI.eps")

# improved 3D historgram suggested by Heather
## minor bug fix to hist3D (from plot3D package)
#fix("hist3D")
## line 128 change
#z.k <- rep(min(z), length(z))
## to
#z.k <- rep(0, length(z))

#pdf("prO.pdf", height = 11, width = 11)
#par(mfrow = c(2,2)) # just for comparing plots

### improved 3D barplot
#library(viridis)
#par(xpd = NA)
#P <- hist3D(x=3:1, y=3:1,
#       z=prO,
#       border = "black",
#       bty = "b2",
#       ticktype = "detailed",
#       nticks = 3,
#       col = viridis(100),
#       shade = 0.2,
#       clim = c(0, max(prO)),
#       zlim = c(0, max(prO)),
#       axes = FALSE,
#       #       col=grey,
#       theta=300,
#       phi=20,
#       space=0.3,
#       xlab="parent's edu",
#       ylab="respondent's educ",
#       zlab="probability"#,
#       #main="Probability of being an Omnivore by parent's and respondent's edu#c"
#       )
#source("perspAxis.R")
#perspAxis(3, P, c(0.5,3.5), c(0.5, 3.5), c(0, max(prO)),
#          ticks = c(0.1, 0.2, 0.3))
#perspAxis(1, P, c(0.5,3.5), c(0.5, 3.5), c(0, max(prO)),
#          ticks = 1:3, labels = c("none", "inter.", "degree"))
#perspAxis(2, P, c(0.5,3.5), c(0.5, 3.5), c(0, max(prO)),
#          ticks = 1:3, labels = c("none", "inter.", "degree"))
#source("perspLab.R")
#perspLab(P, c(0.5,3.5), c(0.5, 3.5), c(0, max(prO)),
#         xlab="Parent's educ",
#         ylab="Respondent's educ",
#         zlab="Probability of being an omnivore")

#######################################################################
# repeat analyses for three age groups, 20-35, 36-49, 50-64
#######################################################################

#######################################################################
# respondents aged 20-35
#######################################################################

Icount <- c(354.85063,  456.40806,  20.647177,
            670.06999,   2548.521,  275.93066,
            88.306372,  625.04693, 218.218857)
                                              
Pcount <- c(314.74464,  202.11443,  6.9420231,
            479.77914, 638.990932,  32.382721,
            42.281854,  87.677008,  12.087251)
                                              
Ocount <- c(302.83908,   102.5418,  2.6228847,
            246.93677,  206.30438,  4.6236938,
             14.33311,  20.798273,        0.5)

counts <- data.frame(cat = factor(rep(lev, each = n), levels = lev),
                     count = c(Icount, Pcount, Ocount),
                     cell = factor(1:n),
                     fparedu = fparedu,
                     fedu = fedu,
                     upmob = upmob,
                     downmob = downmob)

m1 <- gnm(count ~ Dref(cat:fparedu, cat:fedu,
                       delta = ~ -1 + cat),
          eliminate = cell,
          constrain = c("(delta1)|(catI)|(I:)"),
          family = poisson,
          data = counts)
summary(m1)
DrefWeights(m1)

# test for w^v==1
m2 <- gnm(count ~ cat:fparedu,
          eliminate = cell,
          constrain = c("(catI)|(I:)"),
          family = poisson,
          data = counts)
summary(m2)

# Test for mobility effects

m3 <- gnm(count ~ Dref(cat:fparedu, cat:fedu,
                       delta = ~ -1 + cat + cat:upmob),
          eliminate = cell,
          constrain = c("(delta1)|(catI)|(I:)"),
          family = poisson,
          data = counts)
summary(m3)
DrefWeights(m3)

# goodness of fit statistics 
cbind(m1$deviance, m1$df, 1-pchisq(m1$deviance, m1$df))
cbind(m2$deviance, m2$df, 1-pchisq(m2$deviance, m2$df))
cbind(m3$deviance, m3$df, 1-pchisq(m3$deviance, m3$df))
cbind(m2$deviance-m1$deviance,
      m2$df-m1$df,
      1-pchisq(m2$deviance-m1$deviance, m2$df-m1$df))

cbind(m1$deviance-m3$deviance,
      m1$df-m3$df,
      1-pchisq(m1$deviance-m3$deviance, m1$df-m3$df))


########################################################################
# respondents aged 36-49
########################################################################

Icount <- c(193.37631,  241.24595,  33.683845,
            614.50886,   2176.349,  546.76791,
            187.26269,  987.33953,  729.46562)
                                              
Pcount <- c(268.59309,  130.29666,  7.9823712,
            510.31791,  817.36997,  95.827627,
            123.56947,  243.31508,  63.727829)
                                             
Ocount <- c(253.26425,  57.593116,        0.5,
            404.44278, 317.001507,  23.075262,
            64.445607,  63.253558,  11.923919)

counts <- data.frame(cat = factor(rep(lev, each = n), levels = lev),
                     count = c(Icount, Pcount, Ocount),
                     cell = factor(1:n),
                     fparedu = fparedu,
                     fedu = fedu,
                     upmob = upmob,
                     downmob = downmob)

m1 <- gnm(count ~ Dref(cat:fparedu, cat:fedu,
                       delta = ~ -1 + cat),
          eliminate = cell,
          constrain = c("(delta1)|(catI)|(I:)"),
          family = poisson,
          data = counts)
summary(m1)
DrefWeights(m1)

# test for w^v==1
m2 <- gnm(count ~ cat:fparedu,
          eliminate = cell,
          constrain = c("(catI)|(I:)"),
          family = poisson,
          data = counts)
summary(m2)

# Test for mobility effects

m3 <- gnm(count ~ Dref(cat:fparedu, cat:fedu,
                       delta = ~ -1 + cat + cat:upmob),
          eliminate = cell,
          constrain = c("(delta1)|(catI)|(I:)"),
          family = poisson,
          data = counts)
summary(m3)
DrefWeights(m3)

# goodness of fit statistics 
cbind(m1$deviance, m1$df, 1-pchisq(m1$deviance, m1$df))
cbind(m2$deviance, m2$df, 1-pchisq(m2$deviance, m2$df))
cbind(m3$deviance, m3$df, 1-pchisq(m3$deviance, m3$df))
cbind(m2$deviance-m1$deviance,
      m2$df-m1$df,
      1-pchisq(m2$deviance-m1$deviance, m2$df-m1$df))

cbind(m1$deviance-m3$deviance,
      m1$df-m3$df,
      1-pchisq(m1$deviance-m3$deviance, m1$df-m3$df))

########################################################################
# respondents aged 50-64
########################################################################

Icount <- c(70.0239762,  87.577429,  19.374512,
            263.980066,   1038.837,  592.35195,
             172.29254,   1228.305,   1510.258)
                                               
Pcount <- c( 123.37321, 78.6709978,  3.3260608,
             345.92099,  613.89683,   112.6431,
             160.16534,  475.20101,  220.80246)
                                               
Ocount <- c(  138.0666,  45.869368,  3.5137507,
             387.32261,  283.08414,  36.662548,
            120.719978,  180.16555,  46.595446)

counts <- data.frame(cat = factor(rep(lev, each = n), levels = lev),
                     count = c(Icount, Pcount, Ocount),
                     cell = factor(1:n),
                     fparedu = fparedu,
                     fedu = fedu,
                     upmob = upmob,
                     downmob = downmob)

m1 <- gnm(count ~ Dref(cat:fparedu, cat:fedu,
                                 delta = ~ -1 + cat),
          eliminate = cell,
          constrain = c("(delta1)|(catI)|(I:)"),
          family = poisson,
          data = counts)
summary(m1)
DrefWeights(m1)

# test for w^v==1
m2 <- gnm(count ~ cat:fparedu,
          eliminate = cell,
          constrain = c("(catI)|(I:)"),
          family = poisson,
          data = counts)
summary(m2)

# Test for mobility effects

m3 <- gnm(count ~ Dref(cat:fparedu, cat:fedu,
                                 delta = ~ -1 + cat + cat:upmob),
          eliminate = cell,
          constrain = c("(delta1)|(catI)|(I:)"),
          family = poisson,
          data = counts)
summary(m3)
DrefWeights(m3)

# goodness of fit statistics 
cbind(m1$deviance, m1$df, 1-pchisq(m1$deviance, m1$df))
cbind(m2$deviance, m2$df, 1-pchisq(m2$deviance, m2$df))
cbind(m3$deviance, m3$df, 1-pchisq(m3$deviance, m3$df))
cbind(m2$deviance-m1$deviance,
      m2$df-m1$df,
      1-pchisq(m2$deviance-m1$deviance, m2$df-m1$df))

cbind(m1$deviance-m3$deviance,
      m1$df-m3$df,
      1-pchisq(m1$deviance-m3$deviance, m1$df-m3$df))


## DRM for 4 x 4 educ tables (all ages)
## alt table with 4-fold education classification
#altIcount <- c(475.635229,  194.40976,  519.09265,  64.725262,
#                671.74507, 569.794942,  1914.3503,  536.66305,
#                582.95473,  444.58832,   2183.923, 704.799982,
#                 348.1902,  395.56471,   2078.909,   2206.654)
#
#altPcount <- c( 901.12802,  172.29314,  340.27428,  26.685816,               
#                  986.248,  460.86247,   1044.819,  183.38522,
#               713.220609,  337.28519, 959.875233,  203.83564,
#                423.92159,  279.94313,  858.71542,  492.50747)
# 
#altOcount <- c(688.98333,  74.353177,  140.23312, 6.24865367,              
#               644.64032,   191.7229,  272.09232,   32.28684,
#               344.25864,  106.77042,  215.03006,  31.115069,
#               181.54172,  85.610376,  156.94669,  52.166367)
#
#altn <- length(altIcount)
#altn
#
#altedu <- rep(1:4,4)
#altfedu <- factor(altedu)
#
#altparedu <- rep(1:4, rep(4,4))
#altfparedu <- factor(altparedu)
#
#altupmob   <- ifelse(altedu < altparedu, 1, 0)
#altdownmob <- ifelse(altedu > altparedu, 1, 0)
#
### 1. Multinomial Dref model (fitted via Poisson trick)
#altlev <- c("I", "P", "O")
#altcounts <- data.frame(altcat = factor(rep(altlev, each = altn),
#                          levels = altlev),
#                        altcount = c(altIcount, altPcount, altOcount),
#                        cell = factor(1:altn),
#                        altfparedu = altfparedu,
#                        altfedu = altfedu,
#                        altupmob = altupmob,
#                        altdownmob = altdownmob)
#
#altcounts
#altcounts$altcount
#
#altm1 <- gnm(altcount ~ Dref(altcat:altfparedu, altcat:altfedu,
#                             delta = ~ -1 + altcat),
#            eliminate = cell,
#            constrain = c("(delta1)|(altcatI)|(I:)"),
##            ofInterest = "(catP)|(P:)|(catO)|(O:)",
#            family = poisson,
#            data = altcounts)
#summary(altm1)
#DrefWeights(altm1)
#
## Test for mobility effects
#
#altm2 <- gnm(altcount ~ Dref(altcat:altfparedu, altcat:altfedu,
#                             delta = ~ -1 + altcat + altcat:altupmob),
#          eliminate = cell,
#          constrain = c("(delta1)|(altcatI)|(I:)"),
##          ofInterest = "(catP)|(P:)|(catO)|(O:)",
#          family = poisson,
#          data = altcounts)
#summary(altm2)
#DrefWeights(altm2)
#
## DRM by social status band
## table by social status band
#stIcount <- c(400.64465,   373.6593,  267.00283,   146.3351,
#              420.39488,  474.84581, 337.918838,  270.15242,
#              144.15385,  255.38816,  301.10995,  190.03898,
#              676.46093,   1340.558,   1589.049,   1481.288)
# 
#stPcount <- c( 731.45413,  411.84487,  182.61029,  92.449078,
#               479.73676,  429.57305,   159.8493, 120.848073,
#              189.419507,  209.99947,  138.87351,  84.020014,
#               762.67783,  931.82891,  568.46676,  517.34846)
#
#stOcount <- c(537.26206,  219.49047, 78.7962674,  36.238022,
#              257.50252,  184.53874, 55.1654054,  27.904924,
#              78.249963,  67.200924,   23.81647,  10.066796,
#              391.15692,  266.00789,  106.42775,  90.174882)
#
#stn <- length(stIcount)
#
#stedu <- rep(1:4,4)
#stfedu <- factor(stedu)
#
#stparedu <- rep(1:4, rep(4,4))
#stfparedu <- factor(stparedu)
#
#stupmob   <- ifelse(stedu < stparedu, 1, 0)
#stdownmob <- ifelse(stedu > stparedu, 1, 0)
#
#stlev <- c("I", "P", "O")
#
#stcounts <- data.frame(stcat = factor(rep(stlev, each = stn),
#                          levels = stlev),
#                        stcount = c(stIcount, stPcount, stOcount),
#                        cell = factor(1:stn),
#                        stfparedu = stfparedu,
#                        stfedu = stfedu,
#                        stupmob = stupmob,
#                        stdownmob = stdownmob)
#
#stcounts
#stcounts$stcount
#
#stm1 <- gnm(stcount ~ Dref(stcat:stfparedu, stcat:stfedu,
#                             delta = ~ -1 + stcat),
#            eliminate = cell,
#            constrain = c("(delta1)|(stcatI)|(I:)"),
##            ofInterest = "(catP)|(P:)|(catO)|(O:)",
#            family = poisson,
#            data = stcounts)
#summary(stm1)
#DrefWeights(stm1)
#
## Test for mobility effects
#
#stm2 <- gnm(stcount ~ Dref(stcat:stfparedu, stcat:stfedu,
#                             delta = ~ -1 + stcat + stcat:stupmob),
#          eliminate = cell,
#          constrain = c("(delta1)|(stcatI)|(I:)"),
##          ofInterest = "(catP)|(P:)|(catO)|(O:)",
#          family = poisson,
#          data = stcounts)
#summary(stm2)
#DrefWeights(stm2)
